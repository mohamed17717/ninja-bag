{ 
  "dynamic user avatar": {
    "description": "generate specific profile picture for every user using first letters of its name",
    "category": [
      "developer helper",
      "image",
      "frontend helper"
    ],
    "endpoints": [
      {
        "url": "/username-to-profile-pic/{size}/{username}/",
        "method": "GET",
        "description": "generate profile picture with specific size and random color using user's first letters",
        "params": {
          "URL": [
            {
              "name": "size",
              "default": 300,
              "required": true,
              "type": "number",
              "description": "the size of the image's dimensions in px"
            },
            {
              "name": "username",
              "default": "John Doe",
              "required": true,
              "type": "text",
              "description": "The name of the user -- just 2 names"
            }
          ]
        }
      },
      {
        "url": "/username-to-profile-pic/{size}/{username}/{color}/",
        "method": "GET",
        "description": "generate profile picture with specific size and color using user's first letters",
        "params": {
          "URL": [
            {
              "name": "size",
              "default": 300,
              "required": true,
              "type": "number",
              "description": "the size of the image's dimensions in px"
            },
            {
              "name": "username",
              "default": "John Doe",
              "required": true,
              "type": "text",
              "description": "The name of the user -- just 2 names"
            },
            {
              "name": "color",
              "default": "rgb(34,139,34)",
              "required": true,
              "type": "text",
              "description": "the color of the image -- can be rgb, hex (without hashtag #) or known html colors"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "dynamic-user-avatar-f2c56c79"
  },



  "thumbnail generator": {
    "description": "convert image to thumbnail with custom width",
    "category": [
      "developer helper",
      "image",
      "frontend helper"
    ],
    "endpoints": [
      {
        "url": "/image-to-thumbnail/",
        "method": "POST",
        "dataType": "form",
        "params": {
          "POST": [
            {
              "name": "image",
              "required": true,
              "type": "file",
              "accept": "accept='image/png, image/jpeg'",
              "description": "The image you want to convert to thumbnail"
            },
            {
              "name": "width",
              "default": 128,
              "required": false,
              "type": "number",
              "description": "The width needed for the image -- (height is computed dynamically to maintain the scale)"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "thumbnail-generator-3d46d981"
  },


  "image meta cleaner": {
    "description": "clean image from meta data to reduce its size and make it untraceable",
    "category": [
      "developer helper",
      "image"
    ],
    "endpoints": [
      {
        "url": "/remove-image-meta-data/",
        "method": "POST",
        "dataType": "form",
        "params": {
          "POST": [
            {
              "name": "image",
              "required": true,
              "type": "file",
              "accept": "accept='image/png, image/jpeg'",
              "description": "The image you want to convert to clean from meta data"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "image-meta-cleaner-b4f8ebe7"
  },


  "image base64": {
    "description": "encode image to base64 string or decode",
    "category": [
      "developer helper",
      "image",
      "encode"
    ],
    "endpoints": [
      {
        "url": "/image-to-b64/",
        "method": "POST",
        "description": "Convert any image to base64 encode",
        "dataType": "form",
        "params": {
          "POST": [
            {
              "name": "image",
              "required": true,
              "type": "file",
              "accept": "accept='image/png, image/jpeg'",
              "description": "The image you want to convert to encode to base64"
            }
          ]
        }
      },
      {
        "url": "/b64-to-image/",
        "method": "POST",
        "description": "Decode any base64 image to the jpg version of it",
        "dataType": "json",
        "params": {
          "POST": [
            {
              "name": "image",
              "default": "",
              "required": true,
              "type": "text",
              "description": "Base64 string you wanna to convert to the jpg image"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "image-base64-8024e8b9"
  },


  "qr-code generator": {
    "description": "convert any text into a qrcode",
    "category": [
      "image",
      "encode"
    ],
    "endpoints": [
      {
        "url": "/gen-qrcode/",
        "method": "POST",
        "dataType": "json",
        "params": {
          "POST": [
            {
              "name": "text",
              "default": "lorem ipsum text example",
              "required": true,
              "type": "text",
              "description": "The text you want to encode into qr-code"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "qr-code-generator-71dcb25b"
  },


  "facebook user-id": {
    "description": "get the id of any facebook user",
    "category": [
      "developer helper",
      "social",
      "scraping"
    ],
    "endpoints": [
      {
        "url": "/fb-user-id/",
        "method": "POST",
        "dataType": "json",
        "params": {
          "POST": [
            {
              "name": "url",
              "default": "https://fb.com/mohamed17717/",
              "required": true,
              "type": "text",
              "description": "profile url"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "facebook-user-id-90382721"
  },


  "cors proxy": {
    "description": "simple proxy give your js in the browser the ability to navigate the web, and avoid cors policy <br /><br /> Url Example: <b>/cors-proxy/?url=https://google.com/?q=coffee</b>",
    "category": [
      "developer helper",
      "network",
      "scraping"
    ],
    "endpoints": [
      {
        "url": "/cors-proxy/",
        "method": "ANY",
        "description": "like a proxy it will simulate the request you sent (header/body) on the url you set, then simulate the response back to you",
        "stop_http_testing": true,
        "params": {
          "GET": [
            {
              "name": "url",
              "default": "https://google.com",
              "required": true,
              "type": "text",
              "description": "url you wanna navigate"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "cors-proxy-02b8fb50"
  },


  "unshorten url": {
    "description": "convert shorten url to the original one",
    "category": [
      "network"
    ],
    "endpoints": [
      {
        "url": "/unshorten-url/",
        "method": "POST",
        "description": "unpack the url and return the last destination",
        "dataType": "json",
        "params": {
          "POST": [
            {
              "name": "url",
              "default": "https://bit.ly/3i4L5Uk",
              "required": true,
              "type": "text",
              "description": "shorten url you wanna to unshorten it"
            }
          ]
        }
      },
      {
        "url": "/unshorten-url/full-track/",
        "method": "POST",
        "description": "unpack the url and return the all redirects till the destination",
        "dataType": "json",
        "params": {
          "POST": [
            {
              "name": "url",
              "default": "https://bit.ly/3i4L5Uk",
              "required": true,
              "type": "text",
              "description": "shorten url you wanna to unshorten it"
            }
          ]
        }
      }
    ],
    "type": "api",
    "tool_id": "unshorten-url-e80801ea"
  },


  "text saver -- simple db": {
    "description": "work as a semi db, that save any text you post to the api. you can read it anytime. it can be used as a cdn also. <b>(token is required) to map saved content to your account</b>",
    "category": [
      "db",
      "frontend helper",
      "store"
    ],
    "endpoints": [
      {
        "url": "/save-text/",
        "method": "POST",
        "description": "save any text post to this endpoint in your request body.<br>it creates file with random name, and return the full path to that file",
        "dataType": "text",
        "defaultText": "Try to post that example text."
      },
      {
        "url": "/save-text/{filename}/",
        "method": "POST",
        "description": "save any text post to this endpoint in your request body.<br>it creates/update the file with this name",
        "dataType": "text",
        "defaultText": "Try to post that example text.",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to create|update"
            }
          ]
        }
      },
      {
        "url": "/save-text/delete/{filename}/",
        "method": "GET",
        "description": "delete the unwanted file, using ite name",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to delete"
            }
          ]
        }
      },
      {
        "url": "/save-text/delete/{filename}/",
        "method": "DELETE",
        "description": "delete the unwanted file, using ite name",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to delete"
            }
          ]
        }
      },
      {
        "url": "/save-text/{filename}/",
        "method": "DELETE",
        "description": "delete the unwanted file, using ite name",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to delete"
            }
          ]
        }
      },
      {
        "url": "/save-text/read/{filename}/",
        "method": "GET",
        "description": "read your file saved content",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to read"
            }
          ]
        }
      },
      {
        "url": "/save-text/read-text/{filename}/",
        "method": "GET",
        "description": "read file and return its content as a text",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to read"
            }
          ]
        }
      },
      {
        "url": "/save-text/{filename}/",
        "method": "GET",
        "description": "read your file saved content",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to read"
            }
          ]
        }
      },
      {
        "url": "/save-text/check-line-exist/{filename}/",
        "method": "POST",
        "description": "Check if there is a line in file <b>starts with</b> your text <br> it may used to check a record set from your form, etc...",
        "dataType": "json",
        "params": {
          "URL": [
            {
              "name": "filename",
              "default": "default_file.txt",
              "required": true,
              "type": "text",
              "description": "the name of a file you want to create|update"
            }
          ],
          "POST": [
            {
              "name": "line",
              "default": "check this line",
              "required": true,
              "type": "text",
              "description": "line you want to check inside the file, if any line start with it"
            }
          ]
        }
      }
    ],
    "type": "api",
    "login_required": true,
    "tool_id": "text-saver-simple-db-fb75fdbb"
  }
}